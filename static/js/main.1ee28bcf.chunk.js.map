{"version":3,"sources":["api/comments.ts","utils/sanitizeMessage.ts","components/CommentForm/quillConfig.ts","components/Loader/Loader.tsx","components/CommentForm/CommentForm.tsx","components/ModalWindow/ModalWindow.tsx","components/Comment/Comment.tsx","components/CommentsList/CommentsList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getTopComments","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","arguments","getChildrenCommentsByID","_ref2","_callee2","id","_context2","_x","createComment","_ref3","_callee3","payload","_context3","post","headers","status","Error","_x2","getFile","_ref4","_callee4","fileLink","_context4","responseType","_x3","commentsApi","sanitizeMessage","message","decodedMessage","he","decode","sanitizeHtml","allowedTags","allowedAttributes","a","exclusiveFilter","frame","text","trim","modules","toolbar","formats","Loader","_jsx","className","children","initialFormData","userName","email","homePage","parentId","imageFile","textFile","CommentForm","onSubmitLoadComments","onSubmitHideForm","_ref$parentId","_useState","useState","_objectSpread","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","recaptchaResponse","setRecaptchaResponse","_useState7","_useState8","count","setCount","handleInputChange","event","_event$target","target","value","prevData","_defineProperty","handleSubmit","sanitizedMessage","preparedFormData","preventDefault","Notify","failure","timeout","console","log","FormData","Object","entries","forEach","key","append","t0","prevCount","_Fragment","_jsxs","onSubmit","htmlFor","type","required","pattern","onChange","title","ReactQuill","theme","placeholder","accept","files","ReCAPTCHA","sitekey","ModalWindow","isOpen","onClose","fileType","fileSrc","textContent","Modal","open","center","closeOnOverlayClick","classNames","modal","overlay","modalAnimationIn","overlayAnimationIn","animationDuration","src","alt","Comment","React","memo","comment","level","childrenComments","setChildrenComments","showForm","setShowForm","isImageModalOpen","setImageModalOpen","isTextModalOpen","setTextModalOpen","_useState9","_useState10","textModalContent","setTextModalContent","image_link","text_file_link","loadChildrenComments","comments","error","loadTextFileContent","fileBlob","useEffect","handleTextFileClick","author","user_name","Date","created_at","toLocaleString","dangerouslySetInnerHTML","__html","onClick","prevState","toString","length","map","childComment","CommentsList","topComments","topComment","App","setTopComments","loadTopComments","finish","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ee28bcf.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\nimport { CommentType } from '../types/CommentType';\n\nconst BASE_URL = 'https://comments-spa-test.onrender.com';\n// const BASE_URL = 'http://localhost:5000';\n\nconst getTopComments = async (): Promise<CommentType[]> => {\n  const response = await axios\n    .get(`${BASE_URL}/comments`);\n\n  return response.data;\n};\n\nconst getChildrenCommentsByID = async (id: number): Promise<CommentType[]> => {\n  const response = await axios\n    .get(`${BASE_URL}/comments/${id}/children`);\n\n  return response.data;\n};\n\nconst createComment = async (payload: FormData) => {\n  const response = await axios.post(`${BASE_URL}/comments`, payload, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n\n  if (response.status !== 200) {\n    throw new Error('Error submitting comment');\n  }\n\n  return response.data;\n};\n\nconst getFile = async (fileLink: string): Promise<Blob> => {\n  const response = await axios.get(`${BASE_URL}/${fileLink}`, {\n    responseType: 'blob',\n  });\n\n  return response.data;\n};\n\nexport const commentsApi = {\n  getTopComments,\n  getChildrenCommentsByID,\n  createComment,\n  getFile,\n};\n","import he from 'he';\nimport sanitizeHtml from 'sanitize-html';\n\nexport const sanitizeMessage = (message: string): string => {\n  // Decode the characters escaped by ReactQuill\n  const decodedMessage = he.decode(message);\n\n  const sanitizedMessage = sanitizeHtml(decodedMessage, {\n    allowedTags: ['a', 'pre', 'code', 'em', 'strong'],\n    allowedAttributes: {\n      a: ['href', 'title'],\n    },\n    exclusiveFilter: (frame) => {\n      return !frame.text.trim();\n    },\n  });\n\n  return sanitizedMessage;\n};\n","export const modules = {\n  toolbar: [\n    ['bold', 'italic'],\n    ['link'],\n    ['code-block'],\n  ],\n};\n\nexport const formats = ['bold', 'italic', 'link', 'code-block'];\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './CommentForm.scss';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { sanitizeMessage } from '../../utils/sanitizeMessage';\nimport { modules, formats } from './quillConfig';\nimport { Loader } from '../Loader/Loader';\nimport { FormDataType } from '../../types/FormDataType';\nimport { commentsApi } from '../../api/comments';\n\ninterface Props {\n  onSubmitLoadComments: () => Promise<void>;\n  onSubmitHideForm?: () => void;\n  parentId?: string | null;\n}\n\nconst initialFormData: FormDataType = {\n  userName: '',\n  email: '',\n  homePage: '',\n  message: '',\n  parentId: null,\n  imageFile: null,\n  textFile: null,\n};\n\nexport const CommentForm: React.FC<Props> = ({\n  onSubmitLoadComments,\n  onSubmitHideForm,\n  parentId = null,\n}) => {\n  const [formData, setFormData] = useState<FormDataType>({ ...initialFormData, parentId });\n  const [isLoading, setIsLoading] = useState(false);\n  const [recaptchaResponse, setRecaptchaResponse] = useState<string | null>(null);\n  const [count, setCount] = useState(0);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { id, value } = event.target;\n\n    setFormData((prevData) => ({ ...prevData, [id]: value }));\n  };\n\n  const handleMessageChange = (value: string) => {\n    setFormData((prevData) => ({ ...prevData, message: value }));\n  };\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    const imageFile = files ? files[0] : null;\n\n    if (imageFile) {\n      setFormData((prevData) => ({ ...prevData, imageFile }));\n    }\n  };\n\n  const handleTextFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    const textFile = files ? files[0] : null;\n\n    if (textFile) {\n      setFormData((prevData) => ({ ...prevData, textFile }));\n    }\n  };\n\n  const resetFormData = () => {\n    setFormData(initialFormData);\n  };\n\n  const handleRecaptchaChange = (value: string | null) => {\n    setRecaptchaResponse(value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!recaptchaResponse) {\n      Notify.failure('Please complete the CAPTCHA.', { timeout: 5000 });\n\n      return;\n    }\n\n    if (!formData.message) {\n      Notify.failure('Please enter a message.', { timeout: 5000 });\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    const sanitizedMessage = sanitizeMessage(formData.message);\n\n    const preparedFormData: FormDataType = {\n      ...formData,\n      message: sanitizedMessage,\n    };\n\n    console.log('preparedFormData when submitting:', preparedFormData);\n\n    const payload = new FormData();\n\n    Object.entries(preparedFormData).forEach(([key, value]) => {\n      if (value !== null) {\n        payload.append(key, value);\n      }\n    });\n\n    try {\n      const response = await commentsApi.createComment(payload);\n\n      console.log('Comment submitted successfully:', response);\n    } catch (error) {\n      Notify.failure('An error occurred while submitting the comment. Please try again.', { timeout: 5000 });\n    }\n\n    await onSubmitLoadComments();\n\n    setCount((prevCount => prevCount + 1));\n    resetFormData();\n    setIsLoading(false);\n\n    if (onSubmitHideForm) {\n      onSubmitHideForm();\n    }\n  };\n\n  return (\n    <>\n      {isLoading\n        ? (\n          <Loader />\n        )\n        : (\n          <form className=\"Form\" onSubmit={handleSubmit} key={count}>\n            <h2 className=\"Form__title\">Add Your Comment</h2>\n            <div className=\"Form__group\">\n              <label htmlFor=\"username\" className=\"Form__label\">\n                <p className=\"Form__caption\">User Name (required):</p>\n\n                <input\n                  type=\"text\"\n                  id=\"userName\"\n                  required\n                  pattern=\"[A-Za-z0-9 ]+\"\n                  className=\"Form__input\"\n                  onChange={handleInputChange}\n                />\n              </label>\n            </div>\n\n            <div className=\"Form__group\">\n              <label htmlFor=\"email\" className=\"Form__label\">\n                <p className=\"Form__caption\">E-mail (required):</p>\n\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  required\n                  className=\"Form__input\"\n                  onChange={handleInputChange}\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                  title=\"Please enter a valid email address (example: johndoe@example.com)\"\n                />\n              </label>\n\n            </div>\n\n            <div className=\"Form__group\">\n              <label htmlFor=\"homepage\" className=\"Form__label\">\n                <p className=\"Form__caption\">Home page (optional):</p>\n\n                <input\n                  type=\"url\"\n                  id=\"homePage\"\n                  className=\"Form__input\"\n                  onChange={handleInputChange}\n                />\n              </label>\n            </div>\n\n            <div className=\"Form__group\">\n              <label htmlFor=\"message\" className=\"Form__label\">\n                <p className=\"Form__caption\">Text (required):</p>\n              </label>\n\n              <div className=\"Form__messageBlock\">\n                <ReactQuill\n                  value={formData.message}\n                  onChange={handleMessageChange}\n                  modules={modules}\n                  formats={formats}\n                  theme=\"snow\"\n                  placeholder=\"Enter your comment here...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"Form__group\">\n              <label htmlFor=\"imageFile\" className=\"Form__label\">\n                <p className=\"Form__caption\">\n                  Upload Image (JPG, GIF, PNG, max 320x240px):\n                </p>\n\n                <input\n                  type=\"file\"\n                  id=\"imageFile\"\n                  accept=\"image/jpeg,image/gif,image/png\"\n                  className=\"Form__input Form__inputFile\"\n                  onChange={handleImageUpload}\n                />\n              </label>\n            </div>\n\n            <div className=\"Form__group\">\n              <label htmlFor=\"textFile\" className=\"Form__label\">\n                <p className=\"Form__caption\">\n                  Upload Text File (TXT, max 100KB):\n                </p>\n\n                <input\n                  type=\"file\"\n                  id=\"textFile\"\n                  accept=\".txt\"\n                  className=\"Form__input Form__inputFile\"\n                  onChange={handleTextFileUpload}\n                />\n              </label>\n            </div>\n\n            <ReCAPTCHA\n              sitekey=\"your-recaptcha-site-key\"\n              onChange={handleRecaptchaChange}\n            />\n\n            <button type=\"submit\" className=\"Form__submitButton\">Submit</button>\n          </form>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport Modal from 'react-responsive-modal';\nimport './ModalWindow.scss';\nimport { Loader } from '../Loader/Loader';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  fileType: 'image' | 'text';\n  fileSrc: string;\n  textContent?: string;\n}\n\nexport const ModalWindow: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  fileType,\n  fileSrc,\n  textContent,\n}) => {\n  return (\n    <Modal\n      open={isOpen}\n      onClose={onClose}\n      center\n      closeOnOverlayClick\n      classNames={{\n        modal: 'ModalWindow',\n        overlay: 'ModalWindow__overlay',\n        modalAnimationIn: 'ModalWindow__animation',\n        overlayAnimationIn: 'ModalWindow__animation',\n      }}\n      animationDuration={800}\n    >\n      {fileType === 'image' && <img src={fileSrc} alt=\"Attachment\" />}\n\n      {fileType === 'text'\n        && (textContent\n          ? (\n            <pre>{textContent}</pre>\n          )\n          : (\n            <Loader />\n          ))}\n    </Modal>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './Comment.scss';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { CommentType } from '../../types/CommentType';\nimport { commentsApi } from '../../api/comments';\nimport { CommentForm } from '../CommentForm/CommentForm';\nimport { ModalWindow } from '../ModalWindow/ModalWindow';\n\nconst BASE_URL = 'https://comments-spa-test.onrender.com';\n\ninterface Props {\n  comment: CommentType;\n  level: number;\n}\n\nexport const Comment: React.FC<Props> = React.memo(({ comment, level }) => {\n  const [childrenComments, setChildrenComments] = useState<CommentType[]>([]);\n  const [showForm, setShowForm] = useState(false);\n  const [isImageModalOpen, setImageModalOpen] = useState(false);\n  const [isTextModalOpen, setTextModalOpen] = useState(false);\n  const [textModalContent, setTextModalContent] = useState('File is empty');\n\n  const { id, image_link, text_file_link } = comment;\n\n  const loadChildrenComments = async () => {\n    try {\n      const comments = await commentsApi.getChildrenCommentsByID(id);\n\n      setChildrenComments(comments);\n    } catch (error) {\n      console.error(`Error loading comments for comment with id ${id}:`, error);\n\n      Notify.failure(\n        `Error loading comments for comment with id ${id}. Please try again.`,\n        { timeout: 5000 },\n      );\n    }\n  };\n\n  const loadTextFileContent = async (fileLink: string) => {\n    try {\n      const fileBlob = await commentsApi.getFile(fileLink);\n      const text = await fileBlob.text();\n\n      return text;\n    } catch (error) {\n      console.error('Error loading text file:', error);\n\n      Notify.failure(\n        'Error loading text file. Please try again.',\n        { timeout: 5000 },\n      );\n\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    loadChildrenComments();\n  }, [id]);\n\n  const handleImageClick = () => {\n    setImageModalOpen(true);\n  };\n\n  const handleTextFileClick = async () => {\n    setTextModalOpen(true);\n    const text = await loadTextFileContent(`${text_file_link}`);\n\n    setTextModalContent(text);\n  };\n\n  const closeImageModal = () => {\n    setImageModalOpen(false);\n  };\n\n  const closeTextModal = () => {\n    setTextModalOpen(false);\n  };\n\n  return (\n    <>\n      <div className={`Comment Comment--level-${level}`}>\n        <div className=\"Comment__wrapper\">\n          <img\n            className=\"Comment__avatar\"\n            src={`https://avatars.dicebear.com/api/human/${comment.author.email}.svg`}\n            alt=\"User avatar\"\n          />\n\n          <div className=\"Comment__body\">\n            <div className=\"Comment__header\">\n              <span className=\"Comment__authorName\">\n                {comment.author.user_name}\n              </span>\n\n              <span className=\"Comment__date\">\n                {new Date(comment.created_at).toLocaleString()}\n              </span>\n            </div>\n\n            <p\n              className=\"Comment__text\"\n              dangerouslySetInnerHTML={{ __html: comment.text }}\n            />\n\n            {(image_link || text_file_link) && (\n              <div className=\"Comment__attachments\">\n                <span>Files attached:</span>\n\n                {image_link && (\n                  <img\n                    className=\"Comment__attachedImage\"\n                    src={`${BASE_URL}/${image_link}`}\n                    alt=\"Attached\"\n                    onClick={handleImageClick}\n                  />\n                )}\n\n                {text_file_link && (\n                  <div\n                    className=\"Comment__fileIcon\"\n                    onClick={handleTextFileClick}\n                  >\n                  </div>\n                )}\n              </div>\n            )}\n\n            <>\n              {isImageModalOpen && (\n                <ModalWindow\n                  isOpen={isImageModalOpen}\n                  onClose={closeImageModal}\n                  fileType=\"image\"\n                  fileSrc={`${BASE_URL}/${image_link}`}\n                />\n              )}\n\n              {isTextModalOpen && (\n                <ModalWindow\n                  isOpen={isTextModalOpen}\n                  onClose={closeTextModal}\n                  fileType=\"text\"\n                  fileSrc={`${BASE_URL}/${text_file_link}`}\n                  textContent={textModalContent}\n                />\n              )}\n            </>\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Comment__answerButton\"\n          onClick={() => setShowForm((prevState) => !prevState)}\n        >\n          {showForm ? '— Answer' : 'Answer'}\n        </button>\n\n        {showForm && (\n          <CommentForm\n            onSubmitLoadComments={loadChildrenComments}\n            onSubmitHideForm={() => setShowForm(false)}\n            parentId={id.toString()}\n          />\n        )}\n      </div>\n\n      <>\n        {childrenComments.length > 0 && (\n          <>\n            {childrenComments.map((childComment) => (\n              <Comment\n                comment={childComment}\n                level={level < 10 ? level + 1 : level}\n                key={childComment.id}\n              />\n            ))}\n          </>\n        )}\n      </>\n    </>\n  );\n});\n","import React from 'react';\nimport { CommentType } from '../../types/CommentType';\nimport { Comment } from '../Comment/Comment';\n\ninterface Props {\n  topComments: CommentType[];\n}\n\nexport const CommentsList: React.FC<Props> = React.memo(({ topComments }) => {\n  return (\n    <div className=\"CommentsList\">\n      {topComments.map((topComment) => (\n        <Comment\n          comment={topComment}\n          level={1}\n          key={topComment.id}\n        />\n      ))}\n    </div>\n  );\n});\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { CommentsList } from './components/CommentsList/CommentsList';\nimport { CommentForm } from './components/CommentForm/CommentForm';\nimport { Loader } from './components/Loader/Loader';\nimport { commentsApi } from './api/comments';\nimport { CommentType } from './types/CommentType';\n\nexport const App: React.FC = () => {\n  const [topComments, setTopComments] = useState<CommentType[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadTopComments = async () => {\n    setIsLoading(true);\n\n    try {\n      const comments = await commentsApi.getTopComments();\n\n      console.log('Loaded topComments:', comments);\n\n      setTopComments(comments);\n    } catch (error) {\n      console.error('Error loading top comments:', error);\n\n      Notify.failure(\n        'Error loading top comments. Please try again.',\n        { timeout: 5000 },\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTopComments();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <h1 className=\"App__title\">Comments</h1>\n\n        <div className=\"App__main\">\n          {isLoading\n            ? (\n              <Loader />\n            )\n            : (\n              <CommentsList topComments={topComments} />\n            )}\n        </div>\n\n        <div className=\"App__bottom\">\n          <CommentForm onSubmitLoadComments={loadTopComments} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}