{"version":3,"sources":["api/comments.ts","components/Loader/Loader.tsx","components/CommentForm/CommentForm.tsx","components/Comment/Comment.tsx","components/CommentsList/CommentsList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getTopComments","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","arguments","getChildrenCommentsByID","_ref2","_callee2","id","_context2","_x","createComment","_ref3","_callee3","payload","_context3","post","headers","console","log","t0","error","_x2","commentsApi","Loader","_jsx","className","children","initialFormData","userName","email","homePage","message","parentId","imageFile","textFile","CommentForm","onSubmitLoadComments","onSubmitHideForm","_ref$parentId","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","formData","setFormData","_useState5","_useState6","isLoading","setIsLoading","handleInputChange","event","_event$target","target","value","prevData","_objectSpread","_defineProperty","handleSubmit","updatedFormData","preventDefault","FormData","Object","entries","forEach","_ref4","key","append","prevCount","_Fragment","_jsxs","onSubmit","htmlFor","type","required","pattern","onChange","accept","files","Comment","React","memo","comment","level","childrenComments","setChildrenComments","showForm","setShowForm","loadChildrenComments","comments","useEffect","src","alt","author","user_name","Date","created_at","toLocaleString","text","onClick","prevState","toString","length","map","childComment","CommentsList","topComments","topComment","App","setTopComments","loadTopComments","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8fd39cb.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\nimport { CommentType } from '../types/CommentType';\n\n// const BASE_URL = 'https://comments-spa-test.onrender.com';\nconst BASE_URL = 'http://localhost:5000';\n\nconst getTopComments = async (): Promise<CommentType[]> => {\n  const response = await axios\n    .get(`${BASE_URL}/comments`);\n\n  return response.data;\n};\n\nconst getChildrenCommentsByID = async (id: number): Promise<CommentType[]> => {\n  const response = await axios\n    .get(`${BASE_URL}/comments/${id}/children`);\n\n  return response.data;\n};\n\nconst createComment = async (payload: FormData) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/comments`, payload, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    console.log('Comment submitted successfully', response.data);\n  } catch (error) {\n    console.error('Error submitting comment:', error);\n  }\n};\n\nexport const commentsApi = {\n  getTopComments,\n  getChildrenCommentsByID,\n  createComment,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"loader\">\n    <div className=\"loader__content\" />\n  </div>\n);\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './CommentForm.scss';\nimport { Loader } from '../Loader/Loader';\nimport { FormDataType } from '../../types/FormDataType';\nimport { commentsApi } from '../../api/comments';\n\ninterface Props {\n  onSubmitLoadComments: () => Promise<void>;\n  onSubmitHideForm?: () => void;\n  parentId?: string | null;\n}\n\nconst initialFormData: FormDataType = {\n  userName: '',\n  email: '',\n  homePage: '',\n  message: '',\n  parentId: null,\n  imageFile: null,\n  textFile: null,\n};\n\nexport const CommentForm: React.FC<Props> = ({\n  onSubmitLoadComments,\n  onSubmitHideForm,\n  parentId = null,\n}) => {\n  const [count, setCount] = useState(0);\n  const [formData, setFormData] = useState<FormDataType>(initialFormData);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { id, value } = event.target;\n\n    setFormData((prevData) => ({ ...prevData, [id]: value }));\n  };\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    const imageFile = files ? files[0] : null;\n\n    if (imageFile) {\n      setFormData((prevData) => ({ ...prevData, imageFile }));\n    }\n  };\n\n  const handleTextFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    const textFile = files ? files[0] : null;\n\n    if (textFile) {\n      setFormData((prevData) => ({ ...prevData, textFile }));\n    }\n  };\n\n  const resetFormData = () => {\n    setFormData(initialFormData);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    const updatedFormData = { ...formData, parentId };\n\n    console.log('updatedFormData when submitting:', updatedFormData);\n\n    const payload = new FormData();\n\n    Object.entries(updatedFormData).forEach(([key, value]) => {\n      if (value !== null) {\n        payload.append(key, value);\n      }\n    });\n\n    await commentsApi.createComment(payload);\n    await onSubmitLoadComments();\n\n    if (onSubmitHideForm) {\n      onSubmitHideForm();\n    }\n\n    setCount((prevCount => prevCount + 1));\n    resetFormData();\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <form className=\"Form\" onSubmit={handleSubmit} key={count}>\n          <h2 className=\"Form__title\">Add Your Comment</h2>\n          <div className=\"Form__group\">\n            <label htmlFor=\"username\" className=\"Form__label\">\n              <p className=\"Form__caption\">User Name (required):</p>\n\n              <input\n                type=\"text\"\n                id=\"userName\"\n                required\n                pattern=\"[A-Za-z0-9 ]+\"\n                className=\"Form__input\"\n                onChange={handleInputChange}\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__group\">\n            <label htmlFor=\"email\" className=\"Form__label\">\n              <p className=\"Form__caption\">E-mail (required):</p>\n\n              <input\n                type=\"email\"\n                id=\"email\"\n                required\n                className=\"Form__input\"\n                onChange={handleInputChange}\n              />\n            </label>\n\n          </div>\n\n          <div className=\"Form__group\">\n            <label htmlFor=\"homepage\" className=\"Form__label\">\n              <p className=\"Form__caption\">Home page (optional):</p>\n\n              <input\n                type=\"url\"\n                id=\"homePage\"\n                className=\"Form__input\"\n                onChange={handleInputChange}\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__group\">\n            <label htmlFor=\"message\" className=\"Form__label\">\n              <p className=\"Form__caption\">Text (required):</p>\n            </label>\n\n            <div className=\"Form__messageBlock\">\n              <div className=\"Form__tagPanel\">\n                <button type=\"button\" className=\"Form__tagButton\" data-tag=\"i\">i</button>\n                <button type=\"button\" className=\"Form__tagButton\" data-tag=\"strong\">strong</button>\n                <button type=\"button\" className=\"Form__tagButton\" data-tag=\"code\">code</button>\n                <button type=\"button\" className=\"Form__tagButton\" data-tag=\"a\">a</button>\n              </div>\n\n              <textarea\n                id=\"message\"\n                required\n                className=\"Form__textarea\"\n                onChange={handleInputChange}\n              >\n              </textarea>\n            </div>\n          </div>\n\n          <div className=\"Form__group\">\n            <label htmlFor=\"imageFile\" className=\"Form__label\">\n              <p className=\"Form__caption\">\n                Upload Image (JPG, GIF, PNG, max 320x240px):\n              </p>\n\n              <input\n                type=\"file\"\n                id=\"imageFile\"\n                accept=\"image/jpeg,image/gif,image/png\"\n                className=\"Form__input Form__inputFile\"\n                onChange={handleImageUpload}\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__group\">\n            <label htmlFor=\"textFile\" className=\"Form__label\">\n              <p className=\"Form__caption\">\n                Upload Text File (TXT, max 100KB):\n              </p>\n\n              <input\n                type=\"file\"\n                id=\"textFile\"\n                accept=\".txt\"\n                className=\"Form__input Form__inputFile\"\n                onChange={handleTextFileUpload}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className=\"Form__submitButton\">Submit</button>\n        </form>\n      )}\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './Comment.scss';\nimport { CommentType } from '../../types/CommentType';\nimport { commentsApi } from '../../api/comments';\nimport { CommentForm } from '../CommentForm/CommentForm';\n\ninterface Props {\n  comment: CommentType;\n  level: number;\n}\n\nexport const Comment: React.FC<Props> = React.memo(({ comment, level }) => {\n  const [childrenComments, setChildrenComments] = useState<CommentType[]>([]);\n  const [showForm, setShowForm] = useState(false);\n\n  const { id } = comment;\n\n  const loadChildrenComments = async () => {\n    try {\n      const comments = await commentsApi.getChildrenCommentsByID(id);\n\n      setChildrenComments(comments);\n    } catch (error) {\n      console.error(`Error loading comments for comment with id ${id}:`, error);\n    }\n  };\n\n  useEffect(() => {\n    loadChildrenComments();\n  }, [id]);\n\n  return (\n    <>\n      <div className={`Comment Comment--level-${level}`}>\n        <div className=\"Comment__wrapper\">\n          <img\n            className=\"Comment__avatar\"\n            src={`https://avatars.dicebear.com/api/human/${id}.svg`}\n            alt=\"\"\n          />\n\n          <div className=\"Comment__body\">\n            <div className=\"Comment__header\">\n              <span className=\"Comment__authorName\">\n                {comment.author.user_name}\n              </span>\n\n              <span className=\"Comment__date\">\n                {new Date(comment.created_at).toLocaleString()}\n              </span>\n            </div>\n\n            <p className=\"Comment__text\">\n              {comment.text}\n            </p>\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Comment__answerButton\"\n          onClick={() => setShowForm((prevState) => !prevState)}\n        >\n          {showForm ? '— Answer' : 'Answer'}\n        </button>\n\n        {showForm && (\n          <CommentForm\n            onSubmitLoadComments={loadChildrenComments}\n            onSubmitHideForm={() => setShowForm(false)}\n            parentId={id.toString()}\n          />\n        )}\n      </div>\n\n      <>\n        {childrenComments.length > 0 && (\n          <>\n            {childrenComments.map((childComment) => (\n              <Comment\n                comment={childComment}\n                level={level < 10 ? level + 1 : level}\n                key={childComment.id}\n              />\n            ))}\n          </>\n        )}\n      </>\n    </>\n  );\n});\n","import React from 'react';\nimport { CommentType } from '../../types/CommentType';\nimport { Comment } from '../Comment/Comment';\n\ninterface Props {\n  topComments: CommentType[];\n}\n\nexport const CommentsList: React.FC<Props> = React.memo(({ topComments }) => {\n  return (\n    <div className=\"CommentsList\">\n      {topComments.map((topComment) => (\n        <Comment\n          comment={topComment}\n          level={1}\n          key={topComment.id}\n        />\n      ))}\n    </div>\n  );\n});\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { CommentsList } from './components/CommentsList/CommentsList';\nimport { CommentForm } from './components/CommentForm/CommentForm';\nimport { commentsApi } from './api/comments';\nimport { CommentType } from './types/CommentType';\n\nexport const App: React.FC = () => {\n  const [topComments, setTopComments] = useState<CommentType[]>([]);\n\n  const loadTopComments = async () => {\n    try {\n      const comments = await commentsApi.getTopComments();\n\n      console.log('Loaded topComments:', comments);\n\n      setTopComments(comments);\n    } catch (error) {\n      console.error('Error loading top comments:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadTopComments();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <h1 className=\"App__title\">Comments</h1>\n\n        <div className=\"App__main\">\n          <CommentsList topComments={topComments} />\n        </div>\n\n        <div className=\"App__bottom\">\n          <CommentForm onSubmitLoadComments={loadTopComments} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}