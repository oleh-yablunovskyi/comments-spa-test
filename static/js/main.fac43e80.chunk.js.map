{"version":3,"sources":["api/comments.ts","components/CommentForm/CommentForm.tsx","components/Comment/Comment.tsx","components/CommentsList/CommentsList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getTopComments","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","arguments","getChildrenCommentsByID","_ref2","_callee2","id","_context2","_x","createComment","_ref3","_callee3","payload","_context3","post","headers","console","log","t0","error","_x2","commentsApi","initialFormData","userName","email","homePage","message","parentId","imageFile","textFile","CommentForm","onSubmitLoadComments","_ref$parentId","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","formData","setFormData","handleInputChange","event","_event$target","target","value","prevData","_objectSpread","_defineProperty","handleSubmit","updatedFormData","preventDefault","FormData","Object","entries","forEach","_ref4","key","append","prevCount","_jsxs","className","onSubmit","children","_jsx","htmlFor","type","required","pattern","onChange","accept","files","Comment","React","memo","comment","level","childrenComments","setChildrenComments","showForm","setShowForm","loadChildrenComments","comments","useEffect","_Fragment","src","alt","author","user_name","Date","created_at","toLocaleString","text","onClick","prevState","toString","length","map","childComment","CommentsList","topComments","topComment","App","setTopComments","loadTopComments","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fac43e80.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\nimport { CommentType } from '../types/CommentType';\n\nconst BASE_URL = 'https://comments-spa-test.onrender.com';\n// const BASE_URL = 'http://localhost:5000';\n\nconst getTopComments = async (): Promise<CommentType[]> => {\n  const response = await axios\n    .get(`${BASE_URL}/comments`);\n\n  return response.data;\n};\n\nconst getChildrenCommentsByID = async (id: number): Promise<CommentType[]> => {\n  const response = await axios\n    .get(`${BASE_URL}/comments/${id}/children`);\n\n  return response.data;\n};\n\nconst createComment = async (payload: FormData) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/comments`, payload, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    console.log('Comment submitted successfully', response.data);\n  } catch (error) {\n    console.error('Error submitting comment:', error);\n  }\n};\n\nexport const commentsApi = {\n  getTopComments,\n  getChildrenCommentsByID,\n  createComment,\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './CommentForm.scss';\nimport { FormDataType } from '../../types/FormDataType';\nimport { commentsApi } from '../../api/comments';\n\ninterface Props {\n  onSubmitLoadComments: () => Promise<void>;\n  parentId?: string | null;\n}\n\nconst initialFormData: FormDataType = {\n  userName: '',\n  email: '',\n  homePage: '',\n  message: '',\n  parentId: null,\n  imageFile: null,\n  textFile: null,\n};\n\nexport const CommentForm: React.FC<Props> = ({ onSubmitLoadComments, parentId = null }) => {\n  const [count, setCount] = useState(0);\n  const [formData, setFormData] = useState<FormDataType>(initialFormData);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { id, value } = event.target;\n\n    setFormData((prevData) => ({ ...prevData, [id]: value }));\n  };\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    const imageFile = files ? files[0] : null;\n\n    if (imageFile) {\n      setFormData((prevData) => ({ ...prevData, imageFile }));\n    }\n  };\n\n  const handleTextFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { files } = event.target;\n\n    const textFile = files ? files[0] : null;\n\n    if (textFile) {\n      setFormData((prevData) => ({ ...prevData, textFile }));\n    }\n  };\n\n  const resetFormData = () => {\n    setFormData(initialFormData);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const updatedFormData = { ...formData, parentId };\n\n    console.log('updatedFormData when submitting:', updatedFormData);\n\n    const payload = new FormData();\n\n    Object.entries(updatedFormData).forEach(([key, value]) => {\n      if (value !== null) {\n        payload.append(key, value);\n      }\n    });\n\n    await commentsApi.createComment(payload);\n\n    await onSubmitLoadComments();\n\n    setCount((prevCount => prevCount + 1));\n    resetFormData();\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit} key={count}>\n      <h2 className=\"Form__title\">Add Your Comment</h2>\n      <div className=\"Form__group\">\n        <label htmlFor=\"username\" className=\"Form__label\">\n          <p className=\"Form__caption\">User Name (required):</p>\n\n          <input\n            type=\"text\"\n            id=\"userName\"\n            required\n            pattern=\"[A-Za-z0-9 ]+\"\n            className=\"Form__input\"\n            onChange={handleInputChange}\n          />\n        </label>\n      </div>\n\n      <div className=\"Form__group\">\n        <label htmlFor=\"email\" className=\"Form__label\">\n          <p className=\"Form__caption\">E-mail (required):</p>\n\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            className=\"Form__input\"\n            onChange={handleInputChange}\n          />\n        </label>\n\n      </div>\n\n      <div className=\"Form__group\">\n        <label htmlFor=\"homepage\" className=\"Form__label\">\n          <p className=\"Form__caption\">Home page (optional):</p>\n\n          <input\n            type=\"url\"\n            id=\"homePage\"\n            className=\"Form__input\"\n            onChange={handleInputChange}\n          />\n        </label>\n      </div>\n\n      <div className=\"Form__group\">\n        <label htmlFor=\"message\" className=\"Form__label\">\n          <p className=\"Form__caption\">Text (required):</p>\n        </label>\n\n        <div className=\"Form__messageBlock\">\n          <div className=\"Form__tagPanel\">\n            <button type=\"button\" className=\"Form__tagButton\" data-tag=\"i\">i</button>\n            <button type=\"button\" className=\"Form__tagButton\" data-tag=\"strong\">strong</button>\n            <button type=\"button\" className=\"Form__tagButton\" data-tag=\"code\">code</button>\n            <button type=\"button\" className=\"Form__tagButton\" data-tag=\"a\">a</button>\n          </div>\n\n          <textarea\n            id=\"message\"\n            required\n            className=\"Form__textarea\"\n            onChange={handleInputChange}\n          >\n          </textarea>\n        </div>\n      </div>\n\n      <div className=\"Form__group\">\n        <label htmlFor=\"imageFile\" className=\"Form__label\">\n          <p className=\"Form__caption\">\n            Upload Image (JPG, GIF, PNG, max 320x240px):\n          </p>\n\n          <input\n            type=\"file\"\n            id=\"imageFile\"\n            accept=\"image/jpeg,image/gif,image/png\"\n            className=\"Form__input Form__inputFile\"\n            onChange={handleImageUpload}\n          />\n        </label>\n      </div>\n\n      <div className=\"Form__group\">\n        <label htmlFor=\"textFile\" className=\"Form__label\">\n          <p className=\"Form__caption\">\n            Upload Text File (TXT, max 100KB):\n          </p>\n\n          <input\n            type=\"file\"\n            id=\"textFile\"\n            accept=\".txt\"\n            className=\"Form__input Form__inputFile\"\n            onChange={handleTextFileUpload}\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\" className=\"Form__submitButton\">Submit</button>\n    </form>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './Comment.scss';\nimport { CommentType } from '../../types/CommentType';\nimport { commentsApi } from '../../api/comments';\nimport { CommentForm } from '../CommentForm/CommentForm';\n\ninterface Props {\n  comment: CommentType;\n  level: number;\n}\n\nexport const Comment: React.FC<Props> = React.memo(({ comment, level }) => {\n  const [childrenComments, setChildrenComments] = useState<CommentType[]>([]);\n  const [showForm, setShowForm] = useState(false);\n\n  const { id } = comment;\n\n  const loadChildrenComments = async () => {\n    try {\n      const comments = await commentsApi.getChildrenCommentsByID(id);\n\n      setChildrenComments(comments);\n\n      // setShowForm(false);\n    } catch (error) {\n      console.error(`Error loading comments for comment with id ${id}:`, error);\n    }\n  };\n\n  useEffect(() => {\n    loadChildrenComments();\n  }, [id]);\n\n  return (\n    <>\n      <div className={`Comment Comment--level-${level}`}>\n        <div className=\"Comment__wrapper\">\n          <img\n            className=\"Comment__avatar\"\n            src={`https://avatars.dicebear.com/api/human/${id}.svg`}\n            alt=\"\"\n          />\n\n          <div className=\"Comment__body\">\n            <div className=\"Comment__header\">\n              <span className=\"Comment__authorName\">\n                {comment.author.user_name}\n              </span>\n\n              <span className=\"Comment__date\">\n                {new Date(comment.created_at).toLocaleString()}\n              </span>\n            </div>\n\n            <p className=\"Comment__text\">\n              {comment.text}\n            </p>\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Comment__answerButton\"\n          onClick={() => setShowForm((prevState) => !prevState)}\n        >\n          {showForm ? '— Answer' : 'Answer'}\n        </button>\n\n        {showForm && (\n          <CommentForm\n            onSubmitLoadComments={loadChildrenComments}\n            parentId={id.toString()}\n          />\n        )}\n      </div>\n\n      <>\n        {childrenComments.length > 0 && (\n          <>\n            {childrenComments.map((childComment) => (\n              <Comment\n                comment={childComment}\n                level={level < 10 ? level + 1 : level}\n                key={childComment.id}\n              />\n            ))}\n          </>\n        )}\n      </>\n    </>\n  );\n});\n","import React from 'react';\nimport { CommentType } from '../../types/CommentType';\nimport { Comment } from '../Comment/Comment';\n\ninterface Props {\n  topComments: CommentType[];\n}\n\nexport const CommentsList: React.FC<Props> = React.memo(({ topComments }) => {\n  return (\n    <div className=\"CommentsList\">\n      {topComments.map((topComment) => (\n        <Comment\n          comment={topComment}\n          level={1}\n          key={topComment.id}\n        />\n      ))}\n    </div>\n  );\n});\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { CommentsList } from './components/CommentsList/CommentsList';\nimport { CommentForm } from './components/CommentForm/CommentForm';\nimport { commentsApi } from './api/comments';\nimport { CommentType } from './types/CommentType';\n\nexport const App: React.FC = () => {\n  const [topComments, setTopComments] = useState<CommentType[]>([]);\n\n  const loadTopComments = async () => {\n    try {\n      const comments = await commentsApi.getTopComments();\n\n      console.log('Loaded topComments:', comments);\n\n      setTopComments(comments);\n    } catch (error) {\n      console.error('Error loading top comments:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadTopComments();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <h1 className=\"App__title\">Comments</h1>\n\n        <div className=\"App__main\">\n          <CommentsList topComments={topComments} />\n        </div>\n\n        <div className=\"App__bottom\">\n          <CommentForm onSubmitLoadComments={loadTopComments} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}